{"ast":null,"code":"const compare = (word, guess) => {\n  let count = 0;\n  guess = guess.toUpperCase();\n  word = word.toUpperCase();\n  let wordMap = createCountMap(word);\n  guess.split('').forEach(chr => {\n    if (wordMap[chr]) {\n      wordMap[chr]--;\n      count++;\n      if (wordMap[chr] == 0) delete wordMap[chr];\n    }\n  });\n  return count;\n};\n\nfunction createCountMap(word) {\n  let map = {};\n  word.split('').forEach(chr => {\n    map[chr] ? map[chr]++ : map[chr] = 1;\n  });\n  return map;\n}\n\nexport default compare;","map":{"version":3,"sources":["/Users/jin/Desktop/Study/Web Tool/student--JinYang0323/work/basic-react/basic-react/src/compare.js"],"names":["compare","word","guess","count","toUpperCase","wordMap","createCountMap","split","forEach","chr","map"],"mappings":"AAAA,MAAMA,OAAO,GAAG,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAC7B,MAAIC,KAAK,GAAG,CAAZ;AACAD,EAAAA,KAAK,GAAGA,KAAK,CAACE,WAAN,EAAR;AACAH,EAAAA,IAAI,GAAGA,IAAI,CAACG,WAAL,EAAP;AACA,MAAIC,OAAO,GAAGC,cAAc,CAACL,IAAD,CAA5B;AACAC,EAAAA,KAAK,CAACK,KAAN,CAAY,EAAZ,EAAgBC,OAAhB,CAAyBC,GAAD,IAAS;AAC7B,QAAIJ,OAAO,CAACI,GAAD,CAAX,EAAkB;AACdJ,MAAAA,OAAO,CAACI,GAAD,CAAP;AACAN,MAAAA,KAAK;AACL,UAAIE,OAAO,CAACI,GAAD,CAAP,IAAgB,CAApB,EAAuB,OAAOJ,OAAO,CAACI,GAAD,CAAd;AAC1B;AACJ,GAND;AAOA,SAAON,KAAP;AACH,CAbD;;AAeA,SAASG,cAAT,CAAwBL,IAAxB,EAA8B;AAC1B,MAAIS,GAAG,GAAG,EAAV;AACAT,EAAAA,IAAI,CAACM,KAAL,CAAW,EAAX,EAAeC,OAAf,CAAwBC,GAAD,IAAS;AAC5BC,IAAAA,GAAG,CAACD,GAAD,CAAH,GAAWC,GAAG,CAACD,GAAD,CAAH,EAAX,GAAyBC,GAAG,CAACD,GAAD,CAAH,GAAW,CAApC;AACH,GAFD;AAGA,SAAOC,GAAP;AACH;;AAED,eAAeV,OAAf","sourcesContent":["const compare = (word, guess) => {\n    let count = 0;\n    guess = guess.toUpperCase();\n    word = word.toUpperCase();\n    let wordMap = createCountMap(word);\n    guess.split('').forEach((chr) => {\n        if (wordMap[chr]) {\n            wordMap[chr]--;\n            count++;\n            if (wordMap[chr] == 0) delete wordMap[chr];\n        }\n    });\n    return count;\n};\n\nfunction createCountMap(word) {\n    let map = {};\n    word.split('').forEach((chr) => {\n        map[chr] ? map[chr]++ : (map[chr] = 1);\n    });\n    return map;\n}\n\nexport default compare;\n"]},"metadata":{},"sourceType":"module"}