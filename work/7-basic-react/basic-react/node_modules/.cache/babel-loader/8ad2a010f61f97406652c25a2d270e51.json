{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/jin/Desktop/Study/Web Tool/student--JinYang0323/work/basic-react/basic-react/src/App.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport './App.css';\nimport compare from './compare';\n\nfunction App() {\n  _s();\n\n  const secretWord = 'RECAT';\n  const [userInput, setInput] = useState('');\n  const [errMessage, setErrorMessage] = useState('');\n  const errMessages = ['XXX was not a valid word', 'XXX had N letters in common', 'XXX is the secret word!'];\n\n  const checkInput = () => {\n    if (input.length !== 5) setErrorMessage(`${userInput} was not a valid word`);else if (userInput === secretWord) setErrorMessage(`${userInput} is the secret word!`);else setErrorMessage(`${userInput} had ${compare(secretWord, userInput)} letters in common`);\n    setInput('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"guess-panel\",\n      children: [\"Please input a 5 letter word:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"word-input\",\n        type: \"text\",\n        onChange: e => {\n          setInput(e.target.value);\n        },\n        value: userInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"input-btn\",\n        onClick: checkInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"result-panel\",\n      children: errMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"YvJS8IlSrdXMey127UVz7rqXc/Y=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/jin/Desktop/Study/Web Tool/student--JinYang0323/work/basic-react/basic-react/src/App.jsx"],"names":["useState","compare","App","secretWord","userInput","setInput","errMessage","setErrorMessage","errMessages","checkInput","input","length","e","target","value"],"mappings":";;;;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AAEA,OAAO,WAAP;AACA,OAAOC,OAAP,MAAoB,WAApB;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACX,QAAMC,UAAU,GAAG,OAAnB;AACA,QAAM,CAACC,SAAD,EAAYC,QAAZ,IAAwBL,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACM,UAAD,EAAaC,eAAb,IAAgCP,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAMQ,WAAW,GAAG,CAChB,0BADgB,EAEhB,6BAFgB,EAGhB,yBAHgB,CAApB;;AAMA,QAAMC,UAAU,GAAG,MAAM;AACrB,QAAIC,KAAK,CAACC,MAAN,KAAiB,CAArB,EACIJ,eAAe,CAAE,GAAEH,SAAU,uBAAd,CAAf,CADJ,KAEK,IAAIA,SAAS,KAAKD,UAAlB,EACDI,eAAe,CAAE,GAAEH,SAAU,sBAAd,CAAf,CADC,KAGDG,eAAe,CACV,GAAEH,SAAU,QAAOH,OAAO,CACvBE,UADuB,EAEvBC,SAFuB,CAGzB,oBAJS,CAAf;AAOJC,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACH,GAdD;;AAgBA,sBACI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,+DAEI;AACI,QAAA,SAAS,EAAC,YADd;AAEI,QAAA,IAAI,EAAC,MAFT;AAGI,QAAA,QAAQ,EAAGO,CAAD,IAAO;AACbP,UAAAA,QAAQ,CAACO,CAAC,CAACC,MAAF,CAASC,KAAV,CAAR;AACH,SALL;AAMI,QAAA,KAAK,EAAEV;AANX;AAAA;AAAA;AAAA;AAAA,cAFJ,eAUI;AAAQ,QAAA,SAAS,EAAC,WAAlB;AAA8B,QAAA,OAAO,EAAEK;AAAvC;AAAA;AAAA;AAAA;AAAA,cAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAaI;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,gBAA+BH;AAA/B;AAAA;AAAA;AAAA;AAAA,YAbJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAiBH;;GA3CQJ,G;;KAAAA,G;AA6CT,eAAeA,GAAf","sourcesContent":["import { useState } from 'react';\n\nimport './App.css';\nimport compare from './compare';\n\nfunction App() {\n    const secretWord = 'RECAT';\n    const [userInput, setInput] = useState('');\n    const [errMessage, setErrorMessage] = useState('');\n    const errMessages = [\n        'XXX was not a valid word',\n        'XXX had N letters in common',\n        'XXX is the secret word!',\n    ];\n\n    const checkInput = () => {\n        if (input.length !== 5)\n            setErrorMessage(`${userInput} was not a valid word`);\n        else if (userInput === secretWord)\n            setErrorMessage(`${userInput} is the secret word!`);\n        else\n            setErrorMessage(\n                `${userInput} had ${compare(\n                    secretWord,\n                    userInput\n                )} letters in common`\n            );\n\n        setInput('');\n    };\n\n    return (\n        <div className='app'>\n            <div className='guess-panel'>\n                Please input a 5 letter word:\n                <input\n                    className='word-input'\n                    type='text'\n                    onChange={(e) => {\n                        setInput(e.target.value);\n                    }}\n                    value={userInput}\n                ></input>\n                <button className='input-btn' onClick={checkInput}></button>\n            </div>\n            <div className='result-panel'>{errMessage}</div>\n        </div>\n    );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}